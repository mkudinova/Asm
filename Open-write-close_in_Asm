global  _start
flags equ 0x42				; O_RDWR | O_CREAT
							; флаги с которыми открываем файл
							; O_RDWR = 2 = 0x2					0000 0010
							; O_CREAT = 64 = 0x40				0100 0000
							; O_RDWR | O_CREAT = 66 = 0x42		0100 0010

section .bss
var_fd: resq 1				; выделили память, где будем хранить файловый дескриптор

section .text
_start:

	mov rax, 2				; open - открыть файл
	mov rdi, name			; передали 1м аргументом указатель на строку с именем файла
	mov rsi, flags			; передали 2м аргументом имя флаги
	syscall
							; после вызова функции ее возвращаемое значение лежит в rax
	mov [var_fd], rax		; функция возвращает файловый дескриптор, запишем его в var_fd
							; файловый дескриптор - уникальный идентификатор файла

	mov rax, 1				; write - записать строку в файл
	mov rdi, [var_fd]		; 1й аргумент показывает, куда пишем
	mov rsi, text			; 2й - указатель на строку, которую пишем
	mov rdx, 10				; длинна строки text
	syscall

	mov rax, 3				; close - закрыть файл
	mov rdi, [var_fd]
	syscall

	mov rax, 60				; exit - выйти
	xor rdi, rdi
	syscall


name: 	db	"1.txt", 0		; обязательно 0 в конце, т.к. open требует именно строку
text: 	db	"AAAAAAAAAA"	; при этом write требует просто буфер (все это написано в man 2)
